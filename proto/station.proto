syntax = "proto3";

package UMetadata.GRPC;

// The service that returns station information.
service Information
{
    // Gets the currently running stations in the network.
    rpc GetAllActiveStations(AllActiveStationsRequest) returns(StationsResponse) {};
    // Gets the information corresponding to the currently running station.
    rpc GetActiveStation(ActiveStationRequest) returns(Station) {};
    /// Gets all stations in the network.
//    rpc GetAllStations(AllStationsRequest) returns(StationInformationResponse) {};
}

// Defines a station.
message Station
{
    // The network code - e.g., UU.
    string network = 1;
    // The station name - e.g., CTU.
    string name = 2;
    // The station latitude in degrees.  This will be in the range [90, 90].
    double latitude = 3;
    // The station longitude in degrees.  This will be in the range [0, 360). 
    double longitude = 4;
    // The station's elevation in meters above sea-level.
    double elevation = 5;
    // The UTC time in seconds since the epoch when the station was opened.
    int64 start_time = 6;
    // The UTC time in seconds since the epoch when the station was closed.
    int64 end_time = 7;
    // The UTC time was this station's information was updated in microseconds since the epoch.
    int64 last_modified_mus = 8;
    // The station description - e.g., Camp Tracy, Utah.
    optional string description = 9;
};

// The station information corresponding to the request.
message StationsResponse
{
    // The stations in the network.
    repeated Station stations = 1;
}

// Requests the currently active (running) stations.
message AllActiveStationsRequest
{
}

// Requests all stations.
message AllStationsRequest
{
}

// Requests a currently active (running) station.
message ActiveStationRequest
{
    // The network code - e.g., UU.
    string network = 1;
    // The staiton name - e.g., CTU.
    string name = 2;
}
